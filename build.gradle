//
// Copyright (c) 2016, Brian Frank
// Licensed under the Academic Free License version 3.0
//
// History:
//   10 Jun 2016  Matthew Giannini  Creation
//
apply plugin: 'java'
apply plugin: 'maven'


version = '3.0.0'

compileJava {
    sourceCompatibility = 1.4
    targetCompatibility = 1.4
}

repositories {
    jcenter()
}

dependencies {
    compile 'javax.servlet:servlet-api:2.5'

    // Use TestNG framework, also requires calling test.useTestNG() below
    testCompile 'org.testng:testng:6.9.11'
}

test {
    useTestNG() {
        outputDirectory = file("$project.buildDir/reports/testng")
        useDefaultListeners = true
    }

    testLogging.showStandardStreams = true;

    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

task wrapper(type: Wrapper) { gradleVersion = '2.13' }

// Maven pom generation
task createPom {
    outputs.file("pom.xml")
    outputs.upToDateWhen { false }

    doLast {
        pom {
            project {
                groupId 'org.projecthaystack'
                artifactId 'haystack-java'
                version project.version
            }
        }.writeTo("pom.xml")
    }
}
compileJava << { tasks.createPom.execute() }
clean << { tasks.cleanCreatePom.execute() }

// Not sure if this is best way to handle SNAPSHOT versions, but it works for now
task release(dependsOn: build) << { }

gradle.taskGraph.whenReady {taskGraph ->
    if (!taskGraph.hasTask(release)) version += "-SNAPSHOT"
}
